# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bpfmap-file.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import opts_pb2 as opts__pb2
import fown_pb2 as fown__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x62pfmap-file.proto\x1a\nopts.proto\x1a\nfown.proto\"\xba\x02\n\x11\x62pfmap_file_entry\x12\n\n\x02id\x18\x01 \x02(\r\x12\x1f\n\x05\x66lags\x18\x02 \x02(\rB\x10\xd2?\r\x1a\x0brfile.flags\x12\x0b\n\x03pos\x18\x03 \x02(\x04\x12\x19\n\x04\x66own\x18\x04 \x02(\x0b\x32\x0b.fown_entry\x12\x10\n\x08map_type\x18\x05 \x02(\r\x12\x10\n\x08key_size\x18\x06 \x02(\r\x12\x12\n\nvalue_size\x18\x07 \x02(\r\x12\x0e\n\x06map_id\x18\x08 \x02(\r\x12\x13\n\x0bmax_entries\x18\t \x02(\r\x12\x11\n\tmap_flags\x18\n \x02(\r\x12\x0f\n\x07memlock\x18\x0b \x02(\x04\x12\x15\n\x06\x66rozen\x18\x0c \x02(\x08:\x05\x66\x61lse\x12\x10\n\x08map_name\x18\r \x02(\t\x12\x12\n\x07ifindex\x18\x0e \x02(\r:\x01\x30\x12\x12\n\x06mnt_id\x18\x0f \x01(\x11:\x02-1')



_BPFMAP_FILE_ENTRY = DESCRIPTOR.message_types_by_name['bpfmap_file_entry']
bpfmap_file_entry = _reflection.GeneratedProtocolMessageType('bpfmap_file_entry', (_message.Message,), {
  'DESCRIPTOR' : _BPFMAP_FILE_ENTRY,
  '__module__' : 'bpfmap_file_pb2'
  # @@protoc_insertion_point(class_scope:bpfmap_file_entry)
  })
_sym_db.RegisterMessage(bpfmap_file_entry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BPFMAP_FILE_ENTRY.fields_by_name['flags']._options = None
  _BPFMAP_FILE_ENTRY.fields_by_name['flags']._serialized_options = b'\322?\r\032\013rfile.flags'
  _BPFMAP_FILE_ENTRY._serialized_start=46
  _BPFMAP_FILE_ENTRY._serialized_end=360
# @@protoc_insertion_point(module_scope)
