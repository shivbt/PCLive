/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: memfd.proto */

#ifndef PROTOBUF_C_memfd_2eproto__INCLUDED
#define PROTOBUF_C_memfd_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "opts.pb-c.h"
#include "fown.pb-c.h"

typedef struct _MemfdFileEntry MemfdFileEntry;
typedef struct _MemfdInodeEntry MemfdInodeEntry;


/* --- enums --- */


/* --- messages --- */

struct  _MemfdFileEntry
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t flags;
  uint64_t pos;
  FownEntry *fown;
  uint32_t inode_id;
};
#define MEMFD_FILE_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memfd_file_entry__descriptor) \
    , 0, 0, 0, NULL, 0 }


struct  _MemfdInodeEntry
{
  ProtobufCMessage base;
  char *name;
  uint32_t uid;
  uint32_t gid;
  uint64_t size;
  uint32_t shmid;
  uint32_t seals;
  uint64_t inode_id;
};
#define MEMFD_INODE_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&memfd_inode_entry__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0 }


/* MemfdFileEntry methods */
void   memfd_file_entry__init
                     (MemfdFileEntry         *message);
size_t memfd_file_entry__get_packed_size
                     (const MemfdFileEntry   *message);
size_t memfd_file_entry__pack
                     (const MemfdFileEntry   *message,
                      uint8_t             *out);
size_t memfd_file_entry__pack_to_buffer
                     (const MemfdFileEntry   *message,
                      ProtobufCBuffer     *buffer);
MemfdFileEntry *
       memfd_file_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memfd_file_entry__free_unpacked
                     (MemfdFileEntry *message,
                      ProtobufCAllocator *allocator);
/* MemfdInodeEntry methods */
void   memfd_inode_entry__init
                     (MemfdInodeEntry         *message);
size_t memfd_inode_entry__get_packed_size
                     (const MemfdInodeEntry   *message);
size_t memfd_inode_entry__pack
                     (const MemfdInodeEntry   *message,
                      uint8_t             *out);
size_t memfd_inode_entry__pack_to_buffer
                     (const MemfdInodeEntry   *message,
                      ProtobufCBuffer     *buffer);
MemfdInodeEntry *
       memfd_inode_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   memfd_inode_entry__free_unpacked
                     (MemfdInodeEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MemfdFileEntry_Closure)
                 (const MemfdFileEntry *message,
                  void *closure_data);
typedef void (*MemfdInodeEntry_Closure)
                 (const MemfdInodeEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor memfd_file_entry__descriptor;
extern const ProtobufCMessageDescriptor memfd_inode_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_memfd_2eproto__INCLUDED */
