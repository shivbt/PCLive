/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: core-mips.proto */

#ifndef PROTOBUF_C_core_2dmips_2eproto__INCLUDED
#define PROTOBUF_C_core_2dmips_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "opts.pb-c.h"

typedef struct _UserMipsRegsEntry UserMipsRegsEntry;
typedef struct _UserMipsFpregsEntry UserMipsFpregsEntry;
typedef struct _ThreadInfoMips ThreadInfoMips;


/* --- enums --- */


/* --- messages --- */

struct  _UserMipsRegsEntry
{
  ProtobufCMessage base;
  uint64_t r0;
  uint64_t r1;
  uint64_t r2;
  uint64_t r3;
  uint64_t r4;
  uint64_t r5;
  uint64_t r6;
  uint64_t r7;
  uint64_t r8;
  uint64_t r9;
  uint64_t r10;
  uint64_t r11;
  uint64_t r12;
  uint64_t r13;
  uint64_t r14;
  uint64_t r15;
  uint64_t r16;
  uint64_t r17;
  uint64_t r18;
  uint64_t r19;
  uint64_t r20;
  uint64_t r21;
  uint64_t r22;
  uint64_t r23;
  uint64_t r24;
  uint64_t r25;
  uint64_t r26;
  uint64_t r27;
  uint64_t r28;
  uint64_t r29;
  uint64_t r30;
  uint64_t r31;
  uint64_t lo;
  uint64_t hi;
  uint64_t cp0_epc;
  uint64_t cp0_badvaddr;
  uint64_t cp0_status;
  uint64_t cp0_cause;
};
#define USER_MIPS_REGS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_mips_regs_entry__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _UserMipsFpregsEntry
{
  ProtobufCMessage base;
  uint64_t r0;
  uint64_t r1;
  uint64_t r2;
  uint64_t r3;
  uint64_t r4;
  uint64_t r5;
  uint64_t r6;
  uint64_t r7;
  uint64_t r8;
  uint64_t r9;
  uint64_t r10;
  uint64_t r11;
  uint64_t r12;
  uint64_t r13;
  uint64_t r14;
  uint64_t r15;
  uint64_t r16;
  uint64_t r17;
  uint64_t r18;
  uint64_t r19;
  uint64_t r20;
  uint64_t r21;
  uint64_t r22;
  uint64_t r23;
  uint64_t r24;
  uint64_t r25;
  uint64_t r26;
  uint64_t r27;
  uint64_t r28;
  uint64_t r29;
  uint64_t r30;
  uint64_t r31;
  uint64_t lo;
  uint64_t hi;
  uint32_t fpu_fcr31;
  uint32_t fpu_id;
};
#define USER_MIPS_FPREGS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_mips_fpregs_entry__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _ThreadInfoMips
{
  ProtobufCMessage base;
  uint64_t clear_tid_addr;
  uint64_t tls;
  UserMipsRegsEntry *gpregs;
  UserMipsFpregsEntry *fpregs;
};
#define THREAD_INFO_MIPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&thread_info_mips__descriptor) \
    , 0, 0, NULL, NULL }


/* UserMipsRegsEntry methods */
void   user_mips_regs_entry__init
                     (UserMipsRegsEntry         *message);
size_t user_mips_regs_entry__get_packed_size
                     (const UserMipsRegsEntry   *message);
size_t user_mips_regs_entry__pack
                     (const UserMipsRegsEntry   *message,
                      uint8_t             *out);
size_t user_mips_regs_entry__pack_to_buffer
                     (const UserMipsRegsEntry   *message,
                      ProtobufCBuffer     *buffer);
UserMipsRegsEntry *
       user_mips_regs_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_mips_regs_entry__free_unpacked
                     (UserMipsRegsEntry *message,
                      ProtobufCAllocator *allocator);
/* UserMipsFpregsEntry methods */
void   user_mips_fpregs_entry__init
                     (UserMipsFpregsEntry         *message);
size_t user_mips_fpregs_entry__get_packed_size
                     (const UserMipsFpregsEntry   *message);
size_t user_mips_fpregs_entry__pack
                     (const UserMipsFpregsEntry   *message,
                      uint8_t             *out);
size_t user_mips_fpregs_entry__pack_to_buffer
                     (const UserMipsFpregsEntry   *message,
                      ProtobufCBuffer     *buffer);
UserMipsFpregsEntry *
       user_mips_fpregs_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_mips_fpregs_entry__free_unpacked
                     (UserMipsFpregsEntry *message,
                      ProtobufCAllocator *allocator);
/* ThreadInfoMips methods */
void   thread_info_mips__init
                     (ThreadInfoMips         *message);
size_t thread_info_mips__get_packed_size
                     (const ThreadInfoMips   *message);
size_t thread_info_mips__pack
                     (const ThreadInfoMips   *message,
                      uint8_t             *out);
size_t thread_info_mips__pack_to_buffer
                     (const ThreadInfoMips   *message,
                      ProtobufCBuffer     *buffer);
ThreadInfoMips *
       thread_info_mips__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   thread_info_mips__free_unpacked
                     (ThreadInfoMips *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UserMipsRegsEntry_Closure)
                 (const UserMipsRegsEntry *message,
                  void *closure_data);
typedef void (*UserMipsFpregsEntry_Closure)
                 (const UserMipsFpregsEntry *message,
                  void *closure_data);
typedef void (*ThreadInfoMips_Closure)
                 (const ThreadInfoMips *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor user_mips_regs_entry__descriptor;
extern const ProtobufCMessageDescriptor user_mips_fpregs_entry__descriptor;
extern const ProtobufCMessageDescriptor thread_info_mips__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_core_2dmips_2eproto__INCLUDED */
