/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: img-streamer.proto */

#ifndef PROTOBUF_C_img_2dstreamer_2eproto__INCLUDED
#define PROTOBUF_C_img_2dstreamer_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ImgStreamerRequestEntry ImgStreamerRequestEntry;
typedef struct _ImgStreamerReplyEntry ImgStreamerReplyEntry;


/* --- enums --- */


/* --- messages --- */

/*
 * This message is sent from CRIU to the streamer.
 * * During dump, it communicates the name of the file that is about to be sent
 *   to the streamer.
 * * During restore, CRIU requests image files from the streamer. The message is
 *   used to communicate the name of the desired file.
 */
struct  _ImgStreamerRequestEntry
{
  ProtobufCMessage base;
  char *filename;
};
#define IMG_STREAMER_REQUEST_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&img_streamer_request_entry__descriptor) \
    , NULL }


/*
 * This message is sent from the streamer to CRIU. It is only used during
 * restore to report whether the requested file exists.
 */
struct  _ImgStreamerReplyEntry
{
  ProtobufCMessage base;
  protobuf_c_boolean exists;
};
#define IMG_STREAMER_REPLY_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&img_streamer_reply_entry__descriptor) \
    , 0 }


/* ImgStreamerRequestEntry methods */
void   img_streamer_request_entry__init
                     (ImgStreamerRequestEntry         *message);
size_t img_streamer_request_entry__get_packed_size
                     (const ImgStreamerRequestEntry   *message);
size_t img_streamer_request_entry__pack
                     (const ImgStreamerRequestEntry   *message,
                      uint8_t             *out);
size_t img_streamer_request_entry__pack_to_buffer
                     (const ImgStreamerRequestEntry   *message,
                      ProtobufCBuffer     *buffer);
ImgStreamerRequestEntry *
       img_streamer_request_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   img_streamer_request_entry__free_unpacked
                     (ImgStreamerRequestEntry *message,
                      ProtobufCAllocator *allocator);
/* ImgStreamerReplyEntry methods */
void   img_streamer_reply_entry__init
                     (ImgStreamerReplyEntry         *message);
size_t img_streamer_reply_entry__get_packed_size
                     (const ImgStreamerReplyEntry   *message);
size_t img_streamer_reply_entry__pack
                     (const ImgStreamerReplyEntry   *message,
                      uint8_t             *out);
size_t img_streamer_reply_entry__pack_to_buffer
                     (const ImgStreamerReplyEntry   *message,
                      ProtobufCBuffer     *buffer);
ImgStreamerReplyEntry *
       img_streamer_reply_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   img_streamer_reply_entry__free_unpacked
                     (ImgStreamerReplyEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ImgStreamerRequestEntry_Closure)
                 (const ImgStreamerRequestEntry *message,
                  void *closure_data);
typedef void (*ImgStreamerReplyEntry_Closure)
                 (const ImgStreamerReplyEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor img_streamer_request_entry__descriptor;
extern const ProtobufCMessageDescriptor img_streamer_reply_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_img_2dstreamer_2eproto__INCLUDED */
