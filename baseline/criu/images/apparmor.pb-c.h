/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: apparmor.proto */

#ifndef PROTOBUF_C_apparmor_2eproto__INCLUDED
#define PROTOBUF_C_apparmor_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AaPolicy AaPolicy;
typedef struct _AaNamespace AaNamespace;
typedef struct _ApparmorEntry ApparmorEntry;


/* --- enums --- */


/* --- messages --- */

struct  _AaPolicy
{
  ProtobufCMessage base;
  char *name;
  ProtobufCBinaryData blob;
};
#define AA_POLICY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&aa_policy__descriptor) \
    , NULL, {0,NULL} }


struct  _AaNamespace
{
  ProtobufCMessage base;
  char *name;
  size_t n_policies;
  AaPolicy **policies;
  size_t n_namespaces;
  AaNamespace **namespaces;
};
#define AA_NAMESPACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&aa_namespace__descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  _ApparmorEntry
{
  ProtobufCMessage base;
  size_t n_namespaces;
  AaNamespace **namespaces;
};
#define APPARMOR_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&apparmor_entry__descriptor) \
    , 0,NULL }


/* AaPolicy methods */
void   aa_policy__init
                     (AaPolicy         *message);
size_t aa_policy__get_packed_size
                     (const AaPolicy   *message);
size_t aa_policy__pack
                     (const AaPolicy   *message,
                      uint8_t             *out);
size_t aa_policy__pack_to_buffer
                     (const AaPolicy   *message,
                      ProtobufCBuffer     *buffer);
AaPolicy *
       aa_policy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   aa_policy__free_unpacked
                     (AaPolicy *message,
                      ProtobufCAllocator *allocator);
/* AaNamespace methods */
void   aa_namespace__init
                     (AaNamespace         *message);
size_t aa_namespace__get_packed_size
                     (const AaNamespace   *message);
size_t aa_namespace__pack
                     (const AaNamespace   *message,
                      uint8_t             *out);
size_t aa_namespace__pack_to_buffer
                     (const AaNamespace   *message,
                      ProtobufCBuffer     *buffer);
AaNamespace *
       aa_namespace__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   aa_namespace__free_unpacked
                     (AaNamespace *message,
                      ProtobufCAllocator *allocator);
/* ApparmorEntry methods */
void   apparmor_entry__init
                     (ApparmorEntry         *message);
size_t apparmor_entry__get_packed_size
                     (const ApparmorEntry   *message);
size_t apparmor_entry__pack
                     (const ApparmorEntry   *message,
                      uint8_t             *out);
size_t apparmor_entry__pack_to_buffer
                     (const ApparmorEntry   *message,
                      ProtobufCBuffer     *buffer);
ApparmorEntry *
       apparmor_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   apparmor_entry__free_unpacked
                     (ApparmorEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AaPolicy_Closure)
                 (const AaPolicy *message,
                  void *closure_data);
typedef void (*AaNamespace_Closure)
                 (const AaNamespace *message,
                  void *closure_data);
typedef void (*ApparmorEntry_Closure)
                 (const ApparmorEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor aa_policy__descriptor;
extern const ProtobufCMessageDescriptor aa_namespace__descriptor;
extern const ProtobufCMessageDescriptor apparmor_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_apparmor_2eproto__INCLUDED */
