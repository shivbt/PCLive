# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import core_x86_pb2 as core__x86__pb2
import core_arm_pb2 as core__arm__pb2
import core_aarch64_pb2 as core__aarch64__pb2
import core_ppc64_pb2 as core__ppc64__pb2
import core_s390_pb2 as core__s390__pb2
import core_mips_pb2 as core__mips__pb2
import rlimit_pb2 as rlimit__pb2
import timer_pb2 as timer__pb2
import creds_pb2 as creds__pb2
import sa_pb2 as sa__pb2
import siginfo_pb2 as siginfo__pb2
import opts_pb2 as opts__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\ncore.proto\x1a\x0e\x63ore-x86.proto\x1a\x0e\x63ore-arm.proto\x1a\x12\x63ore-aarch64.proto\x1a\x10\x63ore-ppc64.proto\x1a\x0f\x63ore-s390.proto\x1a\x0f\x63ore-mips.proto\x1a\x0crlimit.proto\x1a\x0btimer.proto\x1a\x0b\x63reds.proto\x1a\x08sa.proto\x1a\rsiginfo.proto\x1a\nopts.proto\"\xdb\x03\n\x0ftask_core_entry\x12\x1c\n\ntask_state\x18\x01 \x02(\rB\x08\xd2?\x05\x32\x03gen\x12\x11\n\texit_code\x18\x02 \x02(\r\x12\x13\n\x0bpersonality\x18\x03 \x02(\r\x12\r\n\x05\x66lags\x18\x04 \x02(\r\x12\x19\n\nblk_sigset\x18\x05 \x02(\x04\x42\x05\xd2?\x02\x08\x01\x12\x0c\n\x04\x63omm\x18\x06 \x02(\t\x12\"\n\x06timers\x18\x07 \x01(\x0b\x32\x12.task_timers_entry\x12$\n\x07rlimits\x18\x08 \x01(\x0b\x32\x13.task_rlimits_entry\x12\x0e\n\x06\x63g_set\x18\t \x01(\r\x12&\n\tsignals_s\x18\n \x01(\x0b\x32\x13.signal_queue_entry\x12\'\n\x10old_seccomp_mode\x18\x0b \x01(\x0e\x32\r.seccomp_mode\x12\x1a\n\x12old_seccomp_filter\x18\x0c \x01(\r\x12\x10\n\x08loginuid\x18\r \x01(\r\x12\x15\n\room_score_adj\x18\x0e \x01(\x05\x12\x1d\n\nsigactions\x18\x0f \x03(\x0b\x32\t.sa_entry\x12\x17\n\x0f\x63hild_subreaper\x18\x12 \x01(\x08\x12\"\n\x13\x62lk_sigset_extended\x18\x14 \x01(\x04\x42\x05\xd2?\x02\x08\x01\"\xf6\x01\n\x13task_kobj_ids_entry\x12\r\n\x05vm_id\x18\x01 \x02(\r\x12\x10\n\x08\x66iles_id\x18\x02 \x02(\r\x12\r\n\x05\x66s_id\x18\x03 \x02(\r\x12\x12\n\nsighand_id\x18\x04 \x02(\r\x12\x11\n\tpid_ns_id\x18\x05 \x01(\r\x12\x11\n\tnet_ns_id\x18\x06 \x01(\r\x12\x11\n\tipc_ns_id\x18\x07 \x01(\r\x12\x11\n\tuts_ns_id\x18\x08 \x01(\r\x12\x11\n\tmnt_ns_id\x18\t \x01(\r\x12\x12\n\nuser_ns_id\x18\n \x01(\r\x12\x14\n\x0c\x63group_ns_id\x18\x0b \x01(\r\x12\x12\n\ntime_ns_id\x18\x0c \x01(\r\"D\n\x10thread_sas_entry\x12\r\n\x05ss_sp\x18\x01 \x02(\x04\x12\x0f\n\x07ss_size\x18\x02 \x02(\x04\x12\x10\n\x08ss_flags\x18\x03 \x02(\r\"\xf0\x02\n\x11thread_core_entry\x12\x11\n\tfutex_rla\x18\x01 \x02(\x04\x12\x15\n\rfutex_rla_len\x18\x02 \x02(\r\x12\x12\n\nsched_nice\x18\x03 \x01(\x11\x12\x14\n\x0csched_policy\x18\x04 \x01(\r\x12\x12\n\nsched_prio\x18\x05 \x01(\r\x12\x12\n\nblk_sigset\x18\x06 \x01(\x04\x12\x1e\n\x03sas\x18\x07 \x01(\x0b\x32\x11.thread_sas_entry\x12\x12\n\npdeath_sig\x18\x08 \x01(\r\x12&\n\tsignals_p\x18\t \x01(\x0b\x32\x13.signal_queue_entry\x12\x1b\n\x05\x63reds\x18\n \x01(\x0b\x32\x0c.creds_entry\x12#\n\x0cseccomp_mode\x18\x0b \x01(\x0e\x32\r.seccomp_mode\x12\x16\n\x0eseccomp_filter\x18\x0c \x01(\r\x12\x0c\n\x04\x63omm\x18\r \x01(\t\x12\x1b\n\x13\x62lk_sigset_extended\x18\x0e \x01(\x04\"4\n\x12task_rlimits_entry\x12\x1e\n\x07rlimits\x18\x01 \x03(\x0b\x32\r.rlimit_entry\"\xd0\x03\n\ncore_entry\x12 \n\x05mtype\x18\x01 \x02(\x0e\x32\x11.core_entry.march\x12%\n\x0bthread_info\x18\x02 \x01(\x0b\x32\x10.thread_info_x86\x12 \n\x06ti_arm\x18\x06 \x01(\x0b\x32\x10.thread_info_arm\x12(\n\nti_aarch64\x18\x08 \x01(\x0b\x32\x14.thread_info_aarch64\x12$\n\x08ti_ppc64\x18\t \x01(\x0b\x32\x12.thread_info_ppc64\x12\"\n\x07ti_s390\x18\n \x01(\x0b\x32\x11.thread_info_s390\x12\"\n\x07ti_mips\x18\x0b \x01(\x0b\x32\x11.thread_info_mips\x12\x1c\n\x02tc\x18\x03 \x01(\x0b\x32\x10.task_core_entry\x12!\n\x03ids\x18\x04 \x01(\x0b\x32\x14.task_kobj_ids_entry\x12\'\n\x0bthread_core\x18\x05 \x01(\x0b\x32\x12.thread_core_entry\"U\n\x05march\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06X86_64\x10\x01\x12\x07\n\x03\x41RM\x10\x02\x12\x0b\n\x07\x41\x41RCH64\x10\x03\x12\t\n\x05PPC64\x10\x04\x12\x08\n\x04S390\x10\x05\x12\x08\n\x04MIPS\x10\x06*4\n\x0cseccomp_mode\x12\x0c\n\x08\x64isabled\x10\x00\x12\n\n\x06strict\x10\x01\x12\n\n\x06\x66ilter\x10\x02')

_SECCOMP_MODE = DESCRIPTOR.enum_types_by_name['seccomp_mode']
seccomp_mode = enum_type_wrapper.EnumTypeWrapper(_SECCOMP_MODE)
disabled = 0
strict = 1
filter = 2


_TASK_CORE_ENTRY = DESCRIPTOR.message_types_by_name['task_core_entry']
_TASK_KOBJ_IDS_ENTRY = DESCRIPTOR.message_types_by_name['task_kobj_ids_entry']
_THREAD_SAS_ENTRY = DESCRIPTOR.message_types_by_name['thread_sas_entry']
_THREAD_CORE_ENTRY = DESCRIPTOR.message_types_by_name['thread_core_entry']
_TASK_RLIMITS_ENTRY = DESCRIPTOR.message_types_by_name['task_rlimits_entry']
_CORE_ENTRY = DESCRIPTOR.message_types_by_name['core_entry']
_CORE_ENTRY_MARCH = _CORE_ENTRY.enum_types_by_name['march']
task_core_entry = _reflection.GeneratedProtocolMessageType('task_core_entry', (_message.Message,), {
  'DESCRIPTOR' : _TASK_CORE_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:task_core_entry)
  })
_sym_db.RegisterMessage(task_core_entry)

task_kobj_ids_entry = _reflection.GeneratedProtocolMessageType('task_kobj_ids_entry', (_message.Message,), {
  'DESCRIPTOR' : _TASK_KOBJ_IDS_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:task_kobj_ids_entry)
  })
_sym_db.RegisterMessage(task_kobj_ids_entry)

thread_sas_entry = _reflection.GeneratedProtocolMessageType('thread_sas_entry', (_message.Message,), {
  'DESCRIPTOR' : _THREAD_SAS_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:thread_sas_entry)
  })
_sym_db.RegisterMessage(thread_sas_entry)

thread_core_entry = _reflection.GeneratedProtocolMessageType('thread_core_entry', (_message.Message,), {
  'DESCRIPTOR' : _THREAD_CORE_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:thread_core_entry)
  })
_sym_db.RegisterMessage(thread_core_entry)

task_rlimits_entry = _reflection.GeneratedProtocolMessageType('task_rlimits_entry', (_message.Message,), {
  'DESCRIPTOR' : _TASK_RLIMITS_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:task_rlimits_entry)
  })
_sym_db.RegisterMessage(task_rlimits_entry)

core_entry = _reflection.GeneratedProtocolMessageType('core_entry', (_message.Message,), {
  'DESCRIPTOR' : _CORE_ENTRY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:core_entry)
  })
_sym_db.RegisterMessage(core_entry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TASK_CORE_ENTRY.fields_by_name['task_state']._options = None
  _TASK_CORE_ENTRY.fields_by_name['task_state']._serialized_options = b'\322?\0052\003gen'
  _TASK_CORE_ENTRY.fields_by_name['blk_sigset']._options = None
  _TASK_CORE_ENTRY.fields_by_name['blk_sigset']._serialized_options = b'\322?\002\010\001'
  _TASK_CORE_ENTRY.fields_by_name['blk_sigset_extended']._options = None
  _TASK_CORE_ENTRY.fields_by_name['blk_sigset_extended']._serialized_options = b'\322?\002\010\001'
  _SECCOMP_MODE._serialized_start=1884
  _SECCOMP_MODE._serialized_end=1936
  _TASK_CORE_ENTRY._serialized_start=196
  _TASK_CORE_ENTRY._serialized_end=671
  _TASK_KOBJ_IDS_ENTRY._serialized_start=674
  _TASK_KOBJ_IDS_ENTRY._serialized_end=920
  _THREAD_SAS_ENTRY._serialized_start=922
  _THREAD_SAS_ENTRY._serialized_end=990
  _THREAD_CORE_ENTRY._serialized_start=993
  _THREAD_CORE_ENTRY._serialized_end=1361
  _TASK_RLIMITS_ENTRY._serialized_start=1363
  _TASK_RLIMITS_ENTRY._serialized_end=1415
  _CORE_ENTRY._serialized_start=1418
  _CORE_ENTRY._serialized_end=1882
  _CORE_ENTRY_MARCH._serialized_start=1797
  _CORE_ENTRY_MARCH._serialized_end=1882
# @@protoc_insertion_point(module_scope)
